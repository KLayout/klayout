
/*

  KLayout Layout Viewer
  Copyright (C) 2006-2022 Matthias Koefferlein

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software
  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

*/

/**
*  @file gsiDeclQStyleOptionHeaderV2.cc 
*
*  DO NOT EDIT THIS FILE. 
*  This file has been created automatically
*/

#include <QStyleOptionHeaderV2>
#include <QWidget>
#include "gsiQt.h"
#include "gsiQtWidgetsCommon.h"
#include <memory>

// -----------------------------------------------------------------------
// class QStyleOptionHeaderV2

//  Constructor QStyleOptionHeaderV2::QStyleOptionHeaderV2()


static void _init_ctor_QStyleOptionHeaderV2_0 (qt_gsi::GenericStaticMethod *decl)
{
  decl->set_return_new<QStyleOptionHeaderV2> ();
}

static void _call_ctor_QStyleOptionHeaderV2_0 (const qt_gsi::GenericStaticMethod * /*decl*/, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<QStyleOptionHeaderV2 *> (new QStyleOptionHeaderV2 ());
}


//  Constructor QStyleOptionHeaderV2::QStyleOptionHeaderV2(const QStyleOptionHeaderV2 &other)


static void _init_ctor_QStyleOptionHeaderV2_3277 (qt_gsi::GenericStaticMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("other");
  decl->add_arg<const QStyleOptionHeaderV2 & > (argspec_0);
  decl->set_return_new<QStyleOptionHeaderV2> ();
}

static void _call_ctor_QStyleOptionHeaderV2_3277 (const qt_gsi::GenericStaticMethod * /*decl*/, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  const QStyleOptionHeaderV2 &arg1 = gsi::arg_reader<const QStyleOptionHeaderV2 & >() (args, heap);
  ret.write<QStyleOptionHeaderV2 *> (new QStyleOptionHeaderV2 (arg1));
}


// QStyleOptionHeaderV2 &QStyleOptionHeaderV2::operator=(const QStyleOptionHeaderV2 &)


static void _init_f_operator_eq__3277 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("arg1");
  decl->add_arg<const QStyleOptionHeaderV2 & > (argspec_0);
  decl->set_return<QStyleOptionHeaderV2 & > ();
}

static void _call_f_operator_eq__3277 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  const QStyleOptionHeaderV2 &arg1 = gsi::arg_reader<const QStyleOptionHeaderV2 & >() (args, heap);
  ret.write<QStyleOptionHeaderV2 & > ((QStyleOptionHeaderV2 &)((QStyleOptionHeaderV2 *)cls)->operator= (arg1));
}



namespace gsi
{

static gsi::Methods methods_QStyleOptionHeaderV2 () {
  gsi::Methods methods;
  methods += new qt_gsi::GenericStaticMethod ("new", "@brief Constructor QStyleOptionHeaderV2::QStyleOptionHeaderV2()\nThis method creates an object of class QStyleOptionHeaderV2.", &_init_ctor_QStyleOptionHeaderV2_0, &_call_ctor_QStyleOptionHeaderV2_0);
  methods += new qt_gsi::GenericStaticMethod ("new", "@brief Constructor QStyleOptionHeaderV2::QStyleOptionHeaderV2(const QStyleOptionHeaderV2 &other)\nThis method creates an object of class QStyleOptionHeaderV2.", &_init_ctor_QStyleOptionHeaderV2_3277, &_call_ctor_QStyleOptionHeaderV2_3277);
  methods += new qt_gsi::GenericMethod ("assign", "@brief Method QStyleOptionHeaderV2 &QStyleOptionHeaderV2::operator=(const QStyleOptionHeaderV2 &)\n", false, &_init_f_operator_eq__3277, &_call_f_operator_eq__3277);
  return methods;
}

gsi::Class<QStyleOptionHeader> &qtdecl_QStyleOptionHeader ();

gsi::Class<QStyleOptionHeaderV2> decl_QStyleOptionHeaderV2 (qtdecl_QStyleOptionHeader (), "QtWidgets", "QStyleOptionHeaderV2",
  methods_QStyleOptionHeaderV2 (),
  "@qt\n@brief Binding of QStyleOptionHeaderV2");


GSI_QTWIDGETS_PUBLIC gsi::Class<QStyleOptionHeaderV2> &qtdecl_QStyleOptionHeaderV2 () { return decl_QStyleOptionHeaderV2; }

}

