
/*

  KLayout Layout Viewer
  Copyright (C) 2006-2020 Matthias Koefferlein

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software
  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

*/

/**
*  @file generated/gsiDeclQtSqlTypeTraits.h
*  @brief Type traits for the Qt binding classes
*
*  DO NOT EDIT THIS FILE. 
*  This file has been created automatically
*/

#ifndef _HDR_gsiDeclQtSqlTypeTraits
#define _HDR_gsiDeclQtSqlTypeTraits

#include "gsiTypes.h"


class QAbstractItemModel;
namespace tl {
template <> struct type_traits<QAbstractItemModel> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
  typedef tl::false_tag has_default_constructor;
};
}

class QAbstractItemModel_Adaptor;
namespace tl {
template <> struct type_traits<QAbstractItemModel_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QAbstractListModel;
namespace tl {
template <> struct type_traits<QAbstractListModel> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
  typedef tl::false_tag has_default_constructor;
};
}

class QAbstractListModel_Adaptor;
namespace tl {
template <> struct type_traits<QAbstractListModel_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QAbstractTableModel;
namespace tl {
template <> struct type_traits<QAbstractTableModel> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
  typedef tl::false_tag has_default_constructor;
};
}

class QAbstractTableModel_Adaptor;
namespace tl {
template <> struct type_traits<QAbstractTableModel_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QDataStream;
namespace tl {
template <> struct type_traits<QDataStream> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QDataStream_Adaptor;
namespace tl {
template <> struct type_traits<QDataStream_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QIODevice;
namespace tl {
template <> struct type_traits<QIODevice> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
  typedef tl::false_tag has_default_constructor;
};
}

struct QMetaObject;
namespace tl {
template <> struct type_traits<QMetaObject> : public type_traits<void> {
};
}

class QMetaType;
namespace tl {
template <> struct type_traits<QMetaType> : public type_traits<void> {
};
}

class QModelIndex;
namespace tl {
template <> struct type_traits<QModelIndex> : public type_traits<void> {
};
}

class QObject;
namespace tl {
template <> struct type_traits<QObject> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QObject_Adaptor;
namespace tl {
template <> struct type_traits<QObject_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QPersistentModelIndex;
namespace tl {
template <> struct type_traits<QPersistentModelIndex> : public type_traits<void> {
};
}

class QRegExp;
namespace tl {
template <> struct type_traits<QRegExp> : public type_traits<void> {
};
}

class QSql_Namespace;
namespace tl {
template <> struct type_traits<QSql_Namespace> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
  typedef tl::false_tag has_default_constructor;
};
}

class QSqlDatabase;
namespace tl {
template <> struct type_traits<QSqlDatabase> : public type_traits<void> {
};
}

class QSqlDriver;
namespace tl {
template <> struct type_traits<QSqlDriver> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
  typedef tl::false_tag has_default_constructor;
};
}

class QSqlDriver_Adaptor;
namespace tl {
template <> struct type_traits<QSqlDriver_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QSqlDriverCreatorBase;
namespace tl {
template <> struct type_traits<QSqlDriverCreatorBase> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
  typedef tl::false_tag has_default_constructor;
};
}

class QSqlDriverCreatorBase_Adaptor;
namespace tl {
template <> struct type_traits<QSqlDriverCreatorBase_Adaptor> : public type_traits<void> {
};
}

class QSqlError;
namespace tl {
template <> struct type_traits<QSqlError> : public type_traits<void> {
};
}

class QSqlField;
namespace tl {
template <> struct type_traits<QSqlField> : public type_traits<void> {
};
}

class QSqlIndex;
namespace tl {
template <> struct type_traits<QSqlIndex> : public type_traits<void> {
};
}

class QSqlQuery;
namespace tl {
template <> struct type_traits<QSqlQuery> : public type_traits<void> {
};
}

class QSqlQueryModel;
namespace tl {
template <> struct type_traits<QSqlQueryModel> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QSqlQueryModel_Adaptor;
namespace tl {
template <> struct type_traits<QSqlQueryModel_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QSqlRecord;
namespace tl {
template <> struct type_traits<QSqlRecord> : public type_traits<void> {
};
}

class QSqlRelation;
namespace tl {
template <> struct type_traits<QSqlRelation> : public type_traits<void> {
};
}

class QSqlRelationalTableModel;
namespace tl {
template <> struct type_traits<QSqlRelationalTableModel> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QSqlRelationalTableModel_Adaptor;
namespace tl {
template <> struct type_traits<QSqlRelationalTableModel_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QSqlResult;
namespace tl {
template <> struct type_traits<QSqlResult> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
  typedef tl::false_tag has_default_constructor;
};
}

class QSqlResult_Adaptor;
namespace tl {
template <> struct type_traits<QSqlResult_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
  typedef tl::false_tag has_default_constructor;
};
}

class QSqlTableModel;
namespace tl {
template <> struct type_traits<QSqlTableModel> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QSqlTableModel_Adaptor;
namespace tl {
template <> struct type_traits<QSqlTableModel_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QStringMatcher;
namespace tl {
template <> struct type_traits<QStringMatcher> : public type_traits<void> {
};
}

class QSysInfo;
namespace tl {
template <> struct type_traits<QSysInfo> : public type_traits<void> {
};
}

class Qt_Namespace;
namespace tl {
template <> struct type_traits<Qt_Namespace> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
  typedef tl::false_tag has_default_constructor;
};
}


#endif
