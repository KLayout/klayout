
/*

  KLayout Layout Viewer
  Copyright (C) 2006-2020 Matthias Koefferlein

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software
  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

*/

/**
*  @file generated/gsiDeclQtNetworkTypeTraits.h
*  @brief Type traits for the Qt binding classes
*
*  DO NOT EDIT THIS FILE. 
*  This file has been created automatically
*/

#ifndef _HDR_gsiDeclQtNetworkTypeTraits
#define _HDR_gsiDeclQtNetworkTypeTraits

#include "gsiTypes.h"


class QAbstractNetworkCache;
namespace tl {
template <> struct type_traits<QAbstractNetworkCache> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
  typedef tl::false_tag has_default_constructor;
};
}

class QAbstractNetworkCache_Adaptor;
namespace tl {
template <> struct type_traits<QAbstractNetworkCache_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QAbstractSocket;
namespace tl {
template <> struct type_traits<QAbstractSocket> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
  typedef tl::false_tag has_default_constructor;
};
}

class QAuthenticator;
namespace tl {
template <> struct type_traits<QAuthenticator> : public type_traits<void> {
};
}

class QCryptographicHash;
namespace tl {
template <> struct type_traits<QCryptographicHash> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
  typedef tl::false_tag has_default_constructor;
};
}

class QDataStream;
namespace tl {
template <> struct type_traits<QDataStream> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QDataStream_Adaptor;
namespace tl {
template <> struct type_traits<QDataStream_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QDate;
namespace tl {
template <> struct type_traits<QDate> : public type_traits<void> {
};
}

class QDateTime;
namespace tl {
template <> struct type_traits<QDateTime> : public type_traits<void> {
};
}

class QFtp;
namespace tl {
template <> struct type_traits<QFtp> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QFtp_Adaptor;
namespace tl {
template <> struct type_traits<QFtp_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QHostAddress;
namespace tl {
template <> struct type_traits<QHostAddress> : public type_traits<void> {
};
}

class QHostInfo;
namespace tl {
template <> struct type_traits<QHostInfo> : public type_traits<void> {
};
}

class QIODevice;
namespace tl {
template <> struct type_traits<QIODevice> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
  typedef tl::false_tag has_default_constructor;
};
}

class QIPv6Address;
namespace tl {
template <> struct type_traits<QIPv6Address> : public type_traits<void> {
};
}

class QLocalServer;
namespace tl {
template <> struct type_traits<QLocalServer> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QLocalServer_Adaptor;
namespace tl {
template <> struct type_traits<QLocalServer_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QLocalSocket;
namespace tl {
template <> struct type_traits<QLocalSocket> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QLocale;
namespace tl {
template <> struct type_traits<QLocale> : public type_traits<void> {
};
}

struct QMetaObject;
namespace tl {
template <> struct type_traits<QMetaObject> : public type_traits<void> {
};
}

class QMetaType;
namespace tl {
template <> struct type_traits<QMetaType> : public type_traits<void> {
};
}

class QNetworkAccessManager;
namespace tl {
template <> struct type_traits<QNetworkAccessManager> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QNetworkAccessManager_Adaptor;
namespace tl {
template <> struct type_traits<QNetworkAccessManager_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QNetworkAddressEntry;
namespace tl {
template <> struct type_traits<QNetworkAddressEntry> : public type_traits<void> {
};
}

class QNetworkCacheMetaData;
namespace tl {
template <> struct type_traits<QNetworkCacheMetaData> : public type_traits<void> {
};
}

class QNetworkCookie;
namespace tl {
template <> struct type_traits<QNetworkCookie> : public type_traits<void> {
};
}

class QNetworkCookieJar;
namespace tl {
template <> struct type_traits<QNetworkCookieJar> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QNetworkCookieJar_Adaptor;
namespace tl {
template <> struct type_traits<QNetworkCookieJar_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QNetworkDiskCache;
namespace tl {
template <> struct type_traits<QNetworkDiskCache> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QNetworkDiskCache_Adaptor;
namespace tl {
template <> struct type_traits<QNetworkDiskCache_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QNetworkInterface;
namespace tl {
template <> struct type_traits<QNetworkInterface> : public type_traits<void> {
};
}

class QNetworkProxy;
namespace tl {
template <> struct type_traits<QNetworkProxy> : public type_traits<void> {
};
}

class QNetworkProxyFactory;
namespace tl {
template <> struct type_traits<QNetworkProxyFactory> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
  typedef tl::false_tag has_default_constructor;
};
}

class QNetworkProxyFactory_Adaptor;
namespace tl {
template <> struct type_traits<QNetworkProxyFactory_Adaptor> : public type_traits<void> {
};
}

class QNetworkProxyQuery;
namespace tl {
template <> struct type_traits<QNetworkProxyQuery> : public type_traits<void> {
};
}

class QNetworkReply;
namespace tl {
template <> struct type_traits<QNetworkReply> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
  typedef tl::false_tag has_default_constructor;
};
}

class QNetworkRequest;
namespace tl {
template <> struct type_traits<QNetworkRequest> : public type_traits<void> {
};
}

class QObject;
namespace tl {
template <> struct type_traits<QObject> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QObject_Adaptor;
namespace tl {
template <> struct type_traits<QObject_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QRegExp;
namespace tl {
template <> struct type_traits<QRegExp> : public type_traits<void> {
};
}

class QSsl_Namespace;
namespace tl {
template <> struct type_traits<QSsl_Namespace> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
  typedef tl::false_tag has_default_constructor;
};
}

class QSslCertificate;
namespace tl {
template <> struct type_traits<QSslCertificate> : public type_traits<void> {
};
}

class QSslCipher;
namespace tl {
template <> struct type_traits<QSslCipher> : public type_traits<void> {
};
}

class QSslConfiguration;
namespace tl {
template <> struct type_traits<QSslConfiguration> : public type_traits<void> {
};
}

class QSslError;
namespace tl {
template <> struct type_traits<QSslError> : public type_traits<void> {
};
}

class QSslKey;
namespace tl {
template <> struct type_traits<QSslKey> : public type_traits<void> {
};
}

class QSslSocket;
namespace tl {
template <> struct type_traits<QSslSocket> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QSysInfo;
namespace tl {
template <> struct type_traits<QSysInfo> : public type_traits<void> {
};
}

class QSystemLocale;
namespace tl {
template <> struct type_traits<QSystemLocale> : public type_traits<void> {
};
}

class QSystemLocale_Adaptor;
namespace tl {
template <> struct type_traits<QSystemLocale_Adaptor> : public type_traits<void> {
};
}

class QTcpServer;
namespace tl {
template <> struct type_traits<QTcpServer> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QTcpServer_Adaptor;
namespace tl {
template <> struct type_traits<QTcpServer_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QTcpSocket;
namespace tl {
template <> struct type_traits<QTcpSocket> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QTextStream;
namespace tl {
template <> struct type_traits<QTextStream> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QTextStream_Adaptor;
namespace tl {
template <> struct type_traits<QTextStream_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QTime;
namespace tl {
template <> struct type_traits<QTime> : public type_traits<void> {
};
}

class QUdpSocket;
namespace tl {
template <> struct type_traits<QUdpSocket> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QUrl;
namespace tl {
template <> struct type_traits<QUrl> : public type_traits<void> {
};
}

class QUrlInfo;
namespace tl {
template <> struct type_traits<QUrlInfo> : public type_traits<void> {
};
}

class QUrlInfo_Adaptor;
namespace tl {
template <> struct type_traits<QUrlInfo_Adaptor> : public type_traits<void> {
};
}

class Qt_Namespace;
namespace tl {
template <> struct type_traits<Qt_Namespace> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
  typedef tl::false_tag has_default_constructor;
};
}


#endif
