
/*

  KLayout Layout Viewer
  Copyright (C) 2006-2020 Matthias Koefferlein

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software
  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

*/

/**
*  @file generated/gsiDeclQtXmlPatternsTypeTraits.h
*  @brief Type traits for the Qt binding classes
*
*  DO NOT EDIT THIS FILE. 
*  This file has been created automatically
*/

#ifndef _HDR_gsiDeclQtXmlPatternsTypeTraits
#define _HDR_gsiDeclQtXmlPatternsTypeTraits

#include "gsiTypes.h"


class QAbstractAnimation;
namespace tl {
template <> struct type_traits<QAbstractAnimation> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
  typedef tl::false_tag has_default_constructor;
};
}

class QAbstractAnimation_Adaptor;
namespace tl {
template <> struct type_traits<QAbstractAnimation_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QAbstractEventDispatcher;
namespace tl {
template <> struct type_traits<QAbstractEventDispatcher> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
  typedef tl::false_tag has_default_constructor;
};
}

class QAbstractEventDispatcher_Adaptor;
namespace tl {
template <> struct type_traits<QAbstractEventDispatcher_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

#include <QAbstractEventDispatcher>
namespace tl {
template <> struct type_traits<QAbstractEventDispatcher::TimerInfo> : public type_traits<void> {
  typedef tl::false_tag has_default_constructor;
};
}

class QAbstractItemModel;
namespace tl {
template <> struct type_traits<QAbstractItemModel> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
  typedef tl::false_tag has_default_constructor;
};
}

class QAbstractItemModel_Adaptor;
namespace tl {
template <> struct type_traits<QAbstractItemModel_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QAbstractListModel;
namespace tl {
template <> struct type_traits<QAbstractListModel> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
  typedef tl::false_tag has_default_constructor;
};
}

class QAbstractListModel_Adaptor;
namespace tl {
template <> struct type_traits<QAbstractListModel_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QAbstractMessageHandler;
namespace tl {
template <> struct type_traits<QAbstractMessageHandler> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
  typedef tl::false_tag has_default_constructor;
};
}

class QAbstractMessageHandler_Adaptor;
namespace tl {
template <> struct type_traits<QAbstractMessageHandler_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QAbstractNativeEventFilter;
namespace tl {
template <> struct type_traits<QAbstractNativeEventFilter> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
  typedef tl::false_tag has_default_constructor;
};
}

class QAbstractNativeEventFilter_Adaptor;
namespace tl {
template <> struct type_traits<QAbstractNativeEventFilter_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QAbstractNetworkCache;
namespace tl {
template <> struct type_traits<QAbstractNetworkCache> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
  typedef tl::false_tag has_default_constructor;
};
}

class QAbstractNetworkCache_Adaptor;
namespace tl {
template <> struct type_traits<QAbstractNetworkCache_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QAbstractProxyModel;
namespace tl {
template <> struct type_traits<QAbstractProxyModel> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
  typedef tl::false_tag has_default_constructor;
};
}

class QAbstractProxyModel_Adaptor;
namespace tl {
template <> struct type_traits<QAbstractProxyModel_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QAbstractSocket;
namespace tl {
template <> struct type_traits<QAbstractSocket> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
  typedef tl::false_tag has_default_constructor;
};
}

class QAbstractState;
namespace tl {
template <> struct type_traits<QAbstractState> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
  typedef tl::false_tag has_default_constructor;
};
}

class QAbstractState_Adaptor;
namespace tl {
template <> struct type_traits<QAbstractState_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QAbstractTableModel;
namespace tl {
template <> struct type_traits<QAbstractTableModel> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
  typedef tl::false_tag has_default_constructor;
};
}

class QAbstractTableModel_Adaptor;
namespace tl {
template <> struct type_traits<QAbstractTableModel_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QAbstractTransition;
namespace tl {
template <> struct type_traits<QAbstractTransition> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
  typedef tl::false_tag has_default_constructor;
};
}

class QAbstractTransition_Adaptor;
namespace tl {
template <> struct type_traits<QAbstractTransition_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QAbstractUriResolver;
namespace tl {
template <> struct type_traits<QAbstractUriResolver> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
  typedef tl::false_tag has_default_constructor;
};
}

class QAbstractUriResolver_Adaptor;
namespace tl {
template <> struct type_traits<QAbstractUriResolver_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QAbstractXmlNodeModel;
namespace tl {
template <> struct type_traits<QAbstractXmlNodeModel> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
  typedef tl::false_tag has_default_constructor;
};
}

class QAbstractXmlReceiver;
namespace tl {
template <> struct type_traits<QAbstractXmlReceiver> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
  typedef tl::false_tag has_default_constructor;
};
}

class QAbstractXmlReceiver_Adaptor;
namespace tl {
template <> struct type_traits<QAbstractXmlReceiver_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QAnimationDriver;
namespace tl {
template <> struct type_traits<QAnimationDriver> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QAnimationDriver_Adaptor;
namespace tl {
template <> struct type_traits<QAnimationDriver_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QAnimationGroup;
namespace tl {
template <> struct type_traits<QAnimationGroup> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
  typedef tl::false_tag has_default_constructor;
};
}

class QAnimationGroup_Adaptor;
namespace tl {
template <> struct type_traits<QAnimationGroup_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QAssociativeIterable;
namespace tl {
template <> struct type_traits<QAssociativeIterable> : public type_traits<void> {
  typedef tl::false_tag has_default_constructor;
};
}

class QAuthenticator;
namespace tl {
template <> struct type_traits<QAuthenticator> : public type_traits<void> {
};
}

class QBasicMutex;
namespace tl {
template <> struct type_traits<QBasicMutex> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QBasicTimer;
namespace tl {
template <> struct type_traits<QBasicTimer> : public type_traits<void> {
};
}

class QBuffer;
namespace tl {
template <> struct type_traits<QBuffer> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

struct QByteArrayDataPtr;
namespace tl {
template <> struct type_traits<QByteArrayDataPtr> : public type_traits<void> {
};
}

class QByteArrayMatcher;
namespace tl {
template <> struct type_traits<QByteArrayMatcher> : public type_traits<void> {
};
}

class QChildEvent;
namespace tl {
template <> struct type_traits<QChildEvent> : public type_traits<void> {
  typedef tl::false_tag has_default_constructor;
};
}

class QChildEvent_Adaptor;
namespace tl {
template <> struct type_traits<QChildEvent_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_default_constructor;
};
}

class QCollator;
namespace tl {
template <> struct type_traits<QCollator> : public type_traits<void> {
};
}

class QCollatorSortKey;
namespace tl {
template <> struct type_traits<QCollatorSortKey> : public type_traits<void> {
  typedef tl::false_tag has_default_constructor;
};
}

class QCommandLineOption;
namespace tl {
template <> struct type_traits<QCommandLineOption> : public type_traits<void> {
  typedef tl::false_tag has_default_constructor;
};
}

class QCommandLineParser;
namespace tl {
template <> struct type_traits<QCommandLineParser> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QCoreApplication;
namespace tl {
template <> struct type_traits<QCoreApplication> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
  typedef tl::false_tag has_default_constructor;
};
}

class QCoreApplication_Adaptor;
namespace tl {
template <> struct type_traits<QCoreApplication_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
  typedef tl::false_tag has_default_constructor;
};
}

class QCryptographicHash;
namespace tl {
template <> struct type_traits<QCryptographicHash> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
  typedef tl::false_tag has_default_constructor;
};
}

class QDataStream;
namespace tl {
template <> struct type_traits<QDataStream> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QDate;
namespace tl {
template <> struct type_traits<QDate> : public type_traits<void> {
};
}

class QDateTime;
namespace tl {
template <> struct type_traits<QDateTime> : public type_traits<void> {
};
}

class QDebug;
namespace tl {
template <> struct type_traits<QDebug> : public type_traits<void> {
  typedef tl::false_tag has_default_constructor;
};
}

class QDebugStateSaver;
namespace tl {
template <> struct type_traits<QDebugStateSaver> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
  typedef tl::false_tag has_default_constructor;
};
}

class QDeferredDeleteEvent;
namespace tl {
template <> struct type_traits<QDeferredDeleteEvent> : public type_traits<void> {
};
}

class QDeferredDeleteEvent_Adaptor;
namespace tl {
template <> struct type_traits<QDeferredDeleteEvent_Adaptor> : public type_traits<void> {
};
}

class QDir;
namespace tl {
template <> struct type_traits<QDir> : public type_traits<void> {
};
}

class QDirIterator;
namespace tl {
template <> struct type_traits<QDirIterator> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
  typedef tl::false_tag has_default_constructor;
};
}

class QDnsDomainNameRecord;
namespace tl {
template <> struct type_traits<QDnsDomainNameRecord> : public type_traits<void> {
};
}

class QDnsHostAddressRecord;
namespace tl {
template <> struct type_traits<QDnsHostAddressRecord> : public type_traits<void> {
};
}

class QDnsLookup;
namespace tl {
template <> struct type_traits<QDnsLookup> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QDnsLookup_Adaptor;
namespace tl {
template <> struct type_traits<QDnsLookup_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QDnsMailExchangeRecord;
namespace tl {
template <> struct type_traits<QDnsMailExchangeRecord> : public type_traits<void> {
};
}

class QDnsServiceRecord;
namespace tl {
template <> struct type_traits<QDnsServiceRecord> : public type_traits<void> {
};
}

class QDnsTextRecord;
namespace tl {
template <> struct type_traits<QDnsTextRecord> : public type_traits<void> {
};
}

class QDynamicPropertyChangeEvent;
namespace tl {
template <> struct type_traits<QDynamicPropertyChangeEvent> : public type_traits<void> {
  typedef tl::false_tag has_default_constructor;
};
}

class QDynamicPropertyChangeEvent_Adaptor;
namespace tl {
template <> struct type_traits<QDynamicPropertyChangeEvent_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_default_constructor;
};
}

class QEasingCurve;
namespace tl {
template <> struct type_traits<QEasingCurve> : public type_traits<void> {
};
}

class QElapsedTimer;
namespace tl {
template <> struct type_traits<QElapsedTimer> : public type_traits<void> {
};
}

class QEvent;
namespace tl {
template <> struct type_traits<QEvent> : public type_traits<void> {
  typedef tl::false_tag has_default_constructor;
};
}

class QEvent_Adaptor;
namespace tl {
template <> struct type_traits<QEvent_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_default_constructor;
};
}

class QEventLoop;
namespace tl {
template <> struct type_traits<QEventLoop> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QEventLoop_Adaptor;
namespace tl {
template <> struct type_traits<QEventLoop_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QEventLoopLocker;
namespace tl {
template <> struct type_traits<QEventLoopLocker> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QEventTransition;
namespace tl {
template <> struct type_traits<QEventTransition> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QEventTransition_Adaptor;
namespace tl {
template <> struct type_traits<QEventTransition_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

struct QFactoryInterface;
namespace tl {
template <> struct type_traits<QFactoryInterface> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
  typedef tl::false_tag has_default_constructor;
};
}

class QFactoryInterface_Adaptor;
namespace tl {
template <> struct type_traits<QFactoryInterface_Adaptor> : public type_traits<void> {
};
}

class QFile;
namespace tl {
template <> struct type_traits<QFile> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QFileDevice;
namespace tl {
template <> struct type_traits<QFileDevice> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
  typedef tl::false_tag has_default_constructor;
};
}

class QFileDevice_Adaptor;
namespace tl {
template <> struct type_traits<QFileDevice_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
  typedef tl::false_tag has_default_constructor;
};
}

class QFileInfo;
namespace tl {
template <> struct type_traits<QFileInfo> : public type_traits<void> {
};
}

class QFileSelector;
namespace tl {
template <> struct type_traits<QFileSelector> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QFileSelector_Adaptor;
namespace tl {
template <> struct type_traits<QFileSelector_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QFileSystemWatcher;
namespace tl {
template <> struct type_traits<QFileSystemWatcher> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QFileSystemWatcher_Adaptor;
namespace tl {
template <> struct type_traits<QFileSystemWatcher_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QFinalState;
namespace tl {
template <> struct type_traits<QFinalState> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QFinalState_Adaptor;
namespace tl {
template <> struct type_traits<QFinalState_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QHistoryState;
namespace tl {
template <> struct type_traits<QHistoryState> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QHistoryState_Adaptor;
namespace tl {
template <> struct type_traits<QHistoryState_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QHostAddress;
namespace tl {
template <> struct type_traits<QHostAddress> : public type_traits<void> {
};
}

class QHostInfo;
namespace tl {
template <> struct type_traits<QHostInfo> : public type_traits<void> {
};
}

class QHttpMultiPart;
namespace tl {
template <> struct type_traits<QHttpMultiPart> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QHttpMultiPart_Adaptor;
namespace tl {
template <> struct type_traits<QHttpMultiPart_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QHttpPart;
namespace tl {
template <> struct type_traits<QHttpPart> : public type_traits<void> {
};
}

class QIODevice;
namespace tl {
template <> struct type_traits<QIODevice> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
  typedef tl::false_tag has_default_constructor;
};
}

class QIPv6Address;
namespace tl {
template <> struct type_traits<QIPv6Address> : public type_traits<void> {
};
}

class QIdentityProxyModel;
namespace tl {
template <> struct type_traits<QIdentityProxyModel> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QIdentityProxyModel_Adaptor;
namespace tl {
template <> struct type_traits<QIdentityProxyModel_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QItemSelection;
namespace tl {
template <> struct type_traits<QItemSelection> : public type_traits<void> {
};
}

class QItemSelectionModel;
namespace tl {
template <> struct type_traits<QItemSelectionModel> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
  typedef tl::false_tag has_default_constructor;
};
}

class QItemSelectionModel_Adaptor;
namespace tl {
template <> struct type_traits<QItemSelectionModel_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
  typedef tl::false_tag has_default_constructor;
};
}

class QItemSelectionRange;
namespace tl {
template <> struct type_traits<QItemSelectionRange> : public type_traits<void> {
};
}

class QJsonArray;
namespace tl {
template <> struct type_traits<QJsonArray> : public type_traits<void> {
};
}

#include <QJsonArray>
namespace tl {
template <> struct type_traits<QJsonArray::iterator> : public type_traits<void> {
};
}

#include <QJsonArray>
namespace tl {
template <> struct type_traits<QJsonArray::const_iterator> : public type_traits<void> {
};
}

class QJsonDocument;
namespace tl {
template <> struct type_traits<QJsonDocument> : public type_traits<void> {
};
}

class QJsonObject;
namespace tl {
template <> struct type_traits<QJsonObject> : public type_traits<void> {
};
}

#include <QJsonObject>
namespace tl {
template <> struct type_traits<QJsonObject::iterator> : public type_traits<void> {
};
}

#include <QJsonObject>
namespace tl {
template <> struct type_traits<QJsonObject::const_iterator> : public type_traits<void> {
};
}

struct QJsonParseError;
namespace tl {
template <> struct type_traits<QJsonParseError> : public type_traits<void> {
};
}

class QJsonValue;
namespace tl {
template <> struct type_traits<QJsonValue> : public type_traits<void> {
};
}

class QJsonValuePtr;
namespace tl {
template <> struct type_traits<QJsonValuePtr> : public type_traits<void> {
  typedef tl::false_tag has_default_constructor;
};
}

class QJsonValueRef;
namespace tl {
template <> struct type_traits<QJsonValueRef> : public type_traits<void> {
  typedef tl::false_tag has_default_constructor;
};
}

class QJsonValueRefPtr;
namespace tl {
template <> struct type_traits<QJsonValueRefPtr> : public type_traits<void> {
  typedef tl::false_tag has_default_constructor;
};
}

class QLibrary;
namespace tl {
template <> struct type_traits<QLibrary> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QLibrary_Adaptor;
namespace tl {
template <> struct type_traits<QLibrary_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QLibraryInfo;
namespace tl {
template <> struct type_traits<QLibraryInfo> : public type_traits<void> {
  typedef tl::false_tag has_default_constructor;
};
}

class QLine;
namespace tl {
template <> struct type_traits<QLine> : public type_traits<void> {
};
}

class QLineF;
namespace tl {
template <> struct type_traits<QLineF> : public type_traits<void> {
};
}

class QLocalServer;
namespace tl {
template <> struct type_traits<QLocalServer> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QLocalServer_Adaptor;
namespace tl {
template <> struct type_traits<QLocalServer_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QLocalSocket;
namespace tl {
template <> struct type_traits<QLocalSocket> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QLocale;
namespace tl {
template <> struct type_traits<QLocale> : public type_traits<void> {
};
}

class QLockFile;
namespace tl {
template <> struct type_traits<QLockFile> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
  typedef tl::false_tag has_default_constructor;
};
}

class QLoggingCategory;
namespace tl {
template <> struct type_traits<QLoggingCategory> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
  typedef tl::false_tag has_default_constructor;
};
}

struct QMapDataBase;
namespace tl {
template <> struct type_traits<QMapDataBase> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

struct QMapNodeBase;
namespace tl {
template <> struct type_traits<QMapNodeBase> : public type_traits<void> {
};
}

class QMargins;
namespace tl {
template <> struct type_traits<QMargins> : public type_traits<void> {
};
}

class QMarginsF;
namespace tl {
template <> struct type_traits<QMarginsF> : public type_traits<void> {
};
}

class QMessageAuthenticationCode;
namespace tl {
template <> struct type_traits<QMessageAuthenticationCode> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
  typedef tl::false_tag has_default_constructor;
};
}

class QMessageLogContext;
namespace tl {
template <> struct type_traits<QMessageLogContext> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QMessageLogger;
namespace tl {
template <> struct type_traits<QMessageLogger> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QMetaClassInfo;
namespace tl {
template <> struct type_traits<QMetaClassInfo> : public type_traits<void> {
};
}

class QMetaEnum;
namespace tl {
template <> struct type_traits<QMetaEnum> : public type_traits<void> {
};
}

class QMetaMethod;
namespace tl {
template <> struct type_traits<QMetaMethod> : public type_traits<void> {
};
}

struct QMetaObject;
namespace tl {
template <> struct type_traits<QMetaObject> : public type_traits<void> {
};
}

#include <QMetaObject>
namespace tl {
template <> struct type_traits<QMetaObject::Connection> : public type_traits<void> {
};
}

class QMetaProperty;
namespace tl {
template <> struct type_traits<QMetaProperty> : public type_traits<void> {
};
}

class QMimeData;
namespace tl {
template <> struct type_traits<QMimeData> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QMimeData_Adaptor;
namespace tl {
template <> struct type_traits<QMimeData_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QMimeDatabase;
namespace tl {
template <> struct type_traits<QMimeDatabase> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QMimeType;
namespace tl {
template <> struct type_traits<QMimeType> : public type_traits<void> {
};
}

class QModelIndex;
namespace tl {
template <> struct type_traits<QModelIndex> : public type_traits<void> {
};
}

class QMutex;
namespace tl {
template <> struct type_traits<QMutex> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QNetworkAccessManager;
namespace tl {
template <> struct type_traits<QNetworkAccessManager> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QNetworkAccessManager_Adaptor;
namespace tl {
template <> struct type_traits<QNetworkAccessManager_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QNetworkAddressEntry;
namespace tl {
template <> struct type_traits<QNetworkAddressEntry> : public type_traits<void> {
};
}

class QNetworkCacheMetaData;
namespace tl {
template <> struct type_traits<QNetworkCacheMetaData> : public type_traits<void> {
};
}

class QNetworkConfiguration;
namespace tl {
template <> struct type_traits<QNetworkConfiguration> : public type_traits<void> {
};
}

class QNetworkConfigurationManager;
namespace tl {
template <> struct type_traits<QNetworkConfigurationManager> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QNetworkConfigurationManager_Adaptor;
namespace tl {
template <> struct type_traits<QNetworkConfigurationManager_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QNetworkCookie;
namespace tl {
template <> struct type_traits<QNetworkCookie> : public type_traits<void> {
};
}

class QNetworkCookieJar;
namespace tl {
template <> struct type_traits<QNetworkCookieJar> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QNetworkCookieJar_Adaptor;
namespace tl {
template <> struct type_traits<QNetworkCookieJar_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QNetworkDiskCache;
namespace tl {
template <> struct type_traits<QNetworkDiskCache> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QNetworkDiskCache_Adaptor;
namespace tl {
template <> struct type_traits<QNetworkDiskCache_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QNetworkInterface;
namespace tl {
template <> struct type_traits<QNetworkInterface> : public type_traits<void> {
};
}

class QNetworkProxy;
namespace tl {
template <> struct type_traits<QNetworkProxy> : public type_traits<void> {
};
}

class QNetworkProxyFactory;
namespace tl {
template <> struct type_traits<QNetworkProxyFactory> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
  typedef tl::false_tag has_default_constructor;
};
}

class QNetworkProxyFactory_Adaptor;
namespace tl {
template <> struct type_traits<QNetworkProxyFactory_Adaptor> : public type_traits<void> {
};
}

class QNetworkProxyQuery;
namespace tl {
template <> struct type_traits<QNetworkProxyQuery> : public type_traits<void> {
};
}

class QNetworkReply;
namespace tl {
template <> struct type_traits<QNetworkReply> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
  typedef tl::false_tag has_default_constructor;
};
}

class QNetworkRequest;
namespace tl {
template <> struct type_traits<QNetworkRequest> : public type_traits<void> {
};
}

class QNetworkSession;
namespace tl {
template <> struct type_traits<QNetworkSession> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
  typedef tl::false_tag has_default_constructor;
};
}

class QNetworkSession_Adaptor;
namespace tl {
template <> struct type_traits<QNetworkSession_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
  typedef tl::false_tag has_default_constructor;
};
}

class QNoDebug;
namespace tl {
template <> struct type_traits<QNoDebug> : public type_traits<void> {
};
}

class QObject;
namespace tl {
template <> struct type_traits<QObject> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QObject_Adaptor;
namespace tl {
template <> struct type_traits<QObject_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QParallelAnimationGroup;
namespace tl {
template <> struct type_traits<QParallelAnimationGroup> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QParallelAnimationGroup_Adaptor;
namespace tl {
template <> struct type_traits<QParallelAnimationGroup_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QPauseAnimation;
namespace tl {
template <> struct type_traits<QPauseAnimation> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QPauseAnimation_Adaptor;
namespace tl {
template <> struct type_traits<QPauseAnimation_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QPersistentModelIndex;
namespace tl {
template <> struct type_traits<QPersistentModelIndex> : public type_traits<void> {
};
}

class QPluginLoader;
namespace tl {
template <> struct type_traits<QPluginLoader> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QPluginLoader_Adaptor;
namespace tl {
template <> struct type_traits<QPluginLoader_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QPoint;
namespace tl {
template <> struct type_traits<QPoint> : public type_traits<void> {
};
}

class QPointF;
namespace tl {
template <> struct type_traits<QPointF> : public type_traits<void> {
};
}

class QProcess;
namespace tl {
template <> struct type_traits<QProcess> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QProcessEnvironment;
namespace tl {
template <> struct type_traits<QProcessEnvironment> : public type_traits<void> {
};
}

class QPropertyAnimation;
namespace tl {
template <> struct type_traits<QPropertyAnimation> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QPropertyAnimation_Adaptor;
namespace tl {
template <> struct type_traits<QPropertyAnimation_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QReadLocker;
namespace tl {
template <> struct type_traits<QReadLocker> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
  typedef tl::false_tag has_default_constructor;
};
}

class QReadWriteLock;
namespace tl {
template <> struct type_traits<QReadWriteLock> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QRect;
namespace tl {
template <> struct type_traits<QRect> : public type_traits<void> {
};
}

class QRectF;
namespace tl {
template <> struct type_traits<QRectF> : public type_traits<void> {
};
}

class QRegExp;
namespace tl {
template <> struct type_traits<QRegExp> : public type_traits<void> {
};
}

class QRegularExpression;
namespace tl {
template <> struct type_traits<QRegularExpression> : public type_traits<void> {
};
}

class QRegularExpressionMatch;
namespace tl {
template <> struct type_traits<QRegularExpressionMatch> : public type_traits<void> {
};
}

class QRegularExpressionMatchIterator;
namespace tl {
template <> struct type_traits<QRegularExpressionMatchIterator> : public type_traits<void> {
};
}

class QResource;
namespace tl {
template <> struct type_traits<QResource> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QRunnable;
namespace tl {
template <> struct type_traits<QRunnable> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
  typedef tl::false_tag has_default_constructor;
};
}

class QRunnable_Adaptor;
namespace tl {
template <> struct type_traits<QRunnable_Adaptor> : public type_traits<void> {
};
}

class QSaveFile;
namespace tl {
template <> struct type_traits<QSaveFile> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QSaveFile_Adaptor;
namespace tl {
template <> struct type_traits<QSaveFile_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QSemaphore;
namespace tl {
template <> struct type_traits<QSemaphore> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QSequentialAnimationGroup;
namespace tl {
template <> struct type_traits<QSequentialAnimationGroup> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QSequentialAnimationGroup_Adaptor;
namespace tl {
template <> struct type_traits<QSequentialAnimationGroup_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QSequentialIterable;
namespace tl {
template <> struct type_traits<QSequentialIterable> : public type_traits<void> {
  typedef tl::false_tag has_default_constructor;
};
}

class QSettings;
namespace tl {
template <> struct type_traits<QSettings> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QSettings_Adaptor;
namespace tl {
template <> struct type_traits<QSettings_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QSharedMemory;
namespace tl {
template <> struct type_traits<QSharedMemory> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QSharedMemory_Adaptor;
namespace tl {
template <> struct type_traits<QSharedMemory_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QSignalBlocker;
namespace tl {
template <> struct type_traits<QSignalBlocker> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
  typedef tl::false_tag has_default_constructor;
};
}

class QSignalMapper;
namespace tl {
template <> struct type_traits<QSignalMapper> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QSignalMapper_Adaptor;
namespace tl {
template <> struct type_traits<QSignalMapper_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QSignalTransition;
namespace tl {
template <> struct type_traits<QSignalTransition> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QSignalTransition_Adaptor;
namespace tl {
template <> struct type_traits<QSignalTransition_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QSimpleXmlNodeModel;
namespace tl {
template <> struct type_traits<QSimpleXmlNodeModel> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
  typedef tl::false_tag has_default_constructor;
};
}

class QSize;
namespace tl {
template <> struct type_traits<QSize> : public type_traits<void> {
};
}

class QSizeF;
namespace tl {
template <> struct type_traits<QSizeF> : public type_traits<void> {
};
}

class QSocketNotifier;
namespace tl {
template <> struct type_traits<QSocketNotifier> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
  typedef tl::false_tag has_default_constructor;
};
}

class QSocketNotifier_Adaptor;
namespace tl {
template <> struct type_traits<QSocketNotifier_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
  typedef tl::false_tag has_default_constructor;
};
}

class QSortFilterProxyModel;
namespace tl {
template <> struct type_traits<QSortFilterProxyModel> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QSortFilterProxyModel_Adaptor;
namespace tl {
template <> struct type_traits<QSortFilterProxyModel_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QSourceLocation;
namespace tl {
template <> struct type_traits<QSourceLocation> : public type_traits<void> {
};
}

class QSsl_Namespace;
namespace tl {
template <> struct type_traits<QSsl_Namespace> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
  typedef tl::false_tag has_default_constructor;
};
}

class QSslCertificate;
namespace tl {
template <> struct type_traits<QSslCertificate> : public type_traits<void> {
};
}

class QSslCertificateExtension;
namespace tl {
template <> struct type_traits<QSslCertificateExtension> : public type_traits<void> {
};
}

class QSslCipher;
namespace tl {
template <> struct type_traits<QSslCipher> : public type_traits<void> {
};
}

class QSslConfiguration;
namespace tl {
template <> struct type_traits<QSslConfiguration> : public type_traits<void> {
};
}

class QSslEllipticCurve;
namespace tl {
template <> struct type_traits<QSslEllipticCurve> : public type_traits<void> {
};
}

class QSslError;
namespace tl {
template <> struct type_traits<QSslError> : public type_traits<void> {
};
}

class QSslKey;
namespace tl {
template <> struct type_traits<QSslKey> : public type_traits<void> {
};
}

class QSslPreSharedKeyAuthenticator;
namespace tl {
template <> struct type_traits<QSslPreSharedKeyAuthenticator> : public type_traits<void> {
};
}

class QSslSocket;
namespace tl {
template <> struct type_traits<QSslSocket> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QStandardPaths;
namespace tl {
template <> struct type_traits<QStandardPaths> : public type_traits<void> {
  typedef tl::false_tag has_default_constructor;
  typedef tl::false_tag has_public_destructor;
};
}

class QState;
namespace tl {
template <> struct type_traits<QState> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QState_Adaptor;
namespace tl {
template <> struct type_traits<QState_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QStateMachine;
namespace tl {
template <> struct type_traits<QStateMachine> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QStateMachine_Adaptor;
namespace tl {
template <> struct type_traits<QStateMachine_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

#include <QStateMachine>
namespace tl {
template <> struct type_traits<QStateMachine::SignalEvent> : public type_traits<void> {
  typedef tl::false_tag has_default_constructor;
};
}

class QStateMachine_SignalEvent_Adaptor;
namespace tl {
template <> struct type_traits<QStateMachine_SignalEvent_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_default_constructor;
};
}

#include <QStateMachine>
namespace tl {
template <> struct type_traits<QStateMachine::WrappedEvent> : public type_traits<void> {
  typedef tl::false_tag has_default_constructor;
};
}

class QStateMachine_WrappedEvent_Adaptor;
namespace tl {
template <> struct type_traits<QStateMachine_WrappedEvent_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_default_constructor;
};
}

struct QStaticPlugin;
namespace tl {
template <> struct type_traits<QStaticPlugin> : public type_traits<void> {
};
}

class QStorageInfo;
namespace tl {
template <> struct type_traits<QStorageInfo> : public type_traits<void> {
};
}

struct QStringDataPtr;
namespace tl {
template <> struct type_traits<QStringDataPtr> : public type_traits<void> {
};
}

class QStringListModel;
namespace tl {
template <> struct type_traits<QStringListModel> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QStringListModel_Adaptor;
namespace tl {
template <> struct type_traits<QStringListModel_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QStringMatcher;
namespace tl {
template <> struct type_traits<QStringMatcher> : public type_traits<void> {
};
}

class QSysInfo;
namespace tl {
template <> struct type_traits<QSysInfo> : public type_traits<void> {
};
}

class QSystemSemaphore;
namespace tl {
template <> struct type_traits<QSystemSemaphore> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
  typedef tl::false_tag has_default_constructor;
};
}

class QTcpServer;
namespace tl {
template <> struct type_traits<QTcpServer> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QTcpServer_Adaptor;
namespace tl {
template <> struct type_traits<QTcpServer_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QTcpSocket;
namespace tl {
template <> struct type_traits<QTcpSocket> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QTemporaryDir;
namespace tl {
template <> struct type_traits<QTemporaryDir> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QTemporaryFile;
namespace tl {
template <> struct type_traits<QTemporaryFile> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QTextBoundaryFinder;
namespace tl {
template <> struct type_traits<QTextBoundaryFinder> : public type_traits<void> {
};
}

class QTextCodec;
namespace tl {
template <> struct type_traits<QTextCodec> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
  typedef tl::false_tag has_default_constructor;
  typedef tl::false_tag has_public_destructor;
};
}

class QTextCodec_Adaptor;
namespace tl {
template <> struct type_traits<QTextCodec_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

#include <QTextCodec>
namespace tl {
template <> struct type_traits<QTextCodec::ConverterState> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QTextDecoder;
namespace tl {
template <> struct type_traits<QTextDecoder> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
  typedef tl::false_tag has_default_constructor;
};
}

class QTextEncoder;
namespace tl {
template <> struct type_traits<QTextEncoder> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
  typedef tl::false_tag has_default_constructor;
};
}

class QTextStream;
namespace tl {
template <> struct type_traits<QTextStream> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QTextStream_Adaptor;
namespace tl {
template <> struct type_traits<QTextStream_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QThread;
namespace tl {
template <> struct type_traits<QThread> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QThread_Adaptor;
namespace tl {
template <> struct type_traits<QThread_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QThreadPool;
namespace tl {
template <> struct type_traits<QThreadPool> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QThreadPool_Adaptor;
namespace tl {
template <> struct type_traits<QThreadPool_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QTime;
namespace tl {
template <> struct type_traits<QTime> : public type_traits<void> {
};
}

class QTimeLine;
namespace tl {
template <> struct type_traits<QTimeLine> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QTimeLine_Adaptor;
namespace tl {
template <> struct type_traits<QTimeLine_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QTimeZone;
namespace tl {
template <> struct type_traits<QTimeZone> : public type_traits<void> {
};
}

#include <QTimeZone>
namespace tl {
template <> struct type_traits<QTimeZone::OffsetData> : public type_traits<void> {
};
}

class QTimer;
namespace tl {
template <> struct type_traits<QTimer> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QTimer_Adaptor;
namespace tl {
template <> struct type_traits<QTimer_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QTimerEvent;
namespace tl {
template <> struct type_traits<QTimerEvent> : public type_traits<void> {
  typedef tl::false_tag has_default_constructor;
};
}

class QTimerEvent_Adaptor;
namespace tl {
template <> struct type_traits<QTimerEvent_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_default_constructor;
};
}

class QTranslator;
namespace tl {
template <> struct type_traits<QTranslator> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QTranslator_Adaptor;
namespace tl {
template <> struct type_traits<QTranslator_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QUdpSocket;
namespace tl {
template <> struct type_traits<QUdpSocket> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QUrl;
namespace tl {
template <> struct type_traits<QUrl> : public type_traits<void> {
};
}

class QUrlQuery;
namespace tl {
template <> struct type_traits<QUrlQuery> : public type_traits<void> {
};
}

class QVariantAnimation;
namespace tl {
template <> struct type_traits<QVariantAnimation> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QVariantAnimation_Adaptor;
namespace tl {
template <> struct type_traits<QVariantAnimation_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QWaitCondition;
namespace tl {
template <> struct type_traits<QWaitCondition> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QWriteLocker;
namespace tl {
template <> struct type_traits<QWriteLocker> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
  typedef tl::false_tag has_default_constructor;
};
}

class QXmlFormatter;
namespace tl {
template <> struct type_traits<QXmlFormatter> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
  typedef tl::false_tag has_default_constructor;
};
}

class QXmlFormatter_Adaptor;
namespace tl {
template <> struct type_traits<QXmlFormatter_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
  typedef tl::false_tag has_default_constructor;
};
}

class QXmlItem;
namespace tl {
template <> struct type_traits<QXmlItem> : public type_traits<void> {
};
}

class QXmlName;
namespace tl {
template <> struct type_traits<QXmlName> : public type_traits<void> {
};
}

class QXmlNamePool;
namespace tl {
template <> struct type_traits<QXmlNamePool> : public type_traits<void> {
};
}

class QXmlNodeModelIndex;
namespace tl {
template <> struct type_traits<QXmlNodeModelIndex> : public type_traits<void> {
};
}

class QXmlQuery;
namespace tl {
template <> struct type_traits<QXmlQuery> : public type_traits<void> {
};
}

class QXmlResultItems;
namespace tl {
template <> struct type_traits<QXmlResultItems> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QXmlResultItems_Adaptor;
namespace tl {
template <> struct type_traits<QXmlResultItems_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QXmlSchema;
namespace tl {
template <> struct type_traits<QXmlSchema> : public type_traits<void> {
};
}

class QXmlSchemaValidator;
namespace tl {
template <> struct type_traits<QXmlSchemaValidator> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QXmlSerializer;
namespace tl {
template <> struct type_traits<QXmlSerializer> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
  typedef tl::false_tag has_default_constructor;
};
}

class QXmlSerializer_Adaptor;
namespace tl {
template <> struct type_traits<QXmlSerializer_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
  typedef tl::false_tag has_default_constructor;
};
}

class QXmlStreamAttribute;
namespace tl {
template <> struct type_traits<QXmlStreamAttribute> : public type_traits<void> {
};
}

class QXmlStreamAttributes;
namespace tl {
template <> struct type_traits<QXmlStreamAttributes> : public type_traits<void> {
};
}

class QXmlStreamEntityDeclaration;
namespace tl {
template <> struct type_traits<QXmlStreamEntityDeclaration> : public type_traits<void> {
};
}

class QXmlStreamEntityResolver;
namespace tl {
template <> struct type_traits<QXmlStreamEntityResolver> : public type_traits<void> {
};
}

class QXmlStreamEntityResolver_Adaptor;
namespace tl {
template <> struct type_traits<QXmlStreamEntityResolver_Adaptor> : public type_traits<void> {
};
}

class QXmlStreamNamespaceDeclaration;
namespace tl {
template <> struct type_traits<QXmlStreamNamespaceDeclaration> : public type_traits<void> {
};
}

class QXmlStreamNotationDeclaration;
namespace tl {
template <> struct type_traits<QXmlStreamNotationDeclaration> : public type_traits<void> {
};
}

class QXmlStreamReader;
namespace tl {
template <> struct type_traits<QXmlStreamReader> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QXmlStreamStringRef;
namespace tl {
template <> struct type_traits<QXmlStreamStringRef> : public type_traits<void> {
};
}

class QXmlStreamWriter;
namespace tl {
template <> struct type_traits<QXmlStreamWriter> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class Qt_Namespace;
namespace tl {
template <> struct type_traits<Qt_Namespace> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
  typedef tl::false_tag has_default_constructor;
};
}


#endif
