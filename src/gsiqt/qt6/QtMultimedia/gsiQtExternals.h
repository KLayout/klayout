
/*

  KLayout Layout Viewer
  Copyright (C) 2006-2022 Matthias Koefferlein

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software
  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

*/

/*
  External declarations for for Qt bindings

  DO NOT EDIT THIS FILE. 
  This file has been created automatically
*/

#if !defined(HDR_gsiQtMultimediaExternals)
#define HDR_gsiQtMultimediaExternals

#include "gsiClass.h"
#include "gsiQtMultimediaCommon.h"

class QAudioBuffer;

namespace gsi { GSI_QTMULTIMEDIA_PUBLIC gsi::Class<QAudioBuffer> &qtdecl_QAudioBuffer (); }

class QAudioDecoder;

namespace gsi { GSI_QTMULTIMEDIA_PUBLIC gsi::Class<QAudioDecoder> &qtdecl_QAudioDecoder (); }

class QAudioDevice;

namespace gsi { GSI_QTMULTIMEDIA_PUBLIC gsi::Class<QAudioDevice> &qtdecl_QAudioDevice (); }

class QAudioFormat;

namespace gsi { GSI_QTMULTIMEDIA_PUBLIC gsi::Class<QAudioFormat> &qtdecl_QAudioFormat (); }

class QAudioInput;

namespace gsi { GSI_QTMULTIMEDIA_PUBLIC gsi::Class<QAudioInput> &qtdecl_QAudioInput (); }

class QAudioOutput;

namespace gsi { GSI_QTMULTIMEDIA_PUBLIC gsi::Class<QAudioOutput> &qtdecl_QAudioOutput (); }

class QAudioSink;

namespace gsi { GSI_QTMULTIMEDIA_PUBLIC gsi::Class<QAudioSink> &qtdecl_QAudioSink (); }

class QAudioSource;

namespace gsi { GSI_QTMULTIMEDIA_PUBLIC gsi::Class<QAudioSource> &qtdecl_QAudioSource (); }

class QCamera;

namespace gsi { GSI_QTMULTIMEDIA_PUBLIC gsi::Class<QCamera> &qtdecl_QCamera (); }

class QCameraDevice;

namespace gsi { GSI_QTMULTIMEDIA_PUBLIC gsi::Class<QCameraDevice> &qtdecl_QCameraDevice (); }

class QCameraFormat;

namespace gsi { GSI_QTMULTIMEDIA_PUBLIC gsi::Class<QCameraFormat> &qtdecl_QCameraFormat (); }

class QImageCapture;

namespace gsi { GSI_QTMULTIMEDIA_PUBLIC gsi::Class<QImageCapture> &qtdecl_QImageCapture (); }

class QMediaCaptureSession;

namespace gsi { GSI_QTMULTIMEDIA_PUBLIC gsi::Class<QMediaCaptureSession> &qtdecl_QMediaCaptureSession (); }

class QMediaDevices;

namespace gsi { GSI_QTMULTIMEDIA_PUBLIC gsi::Class<QMediaDevices> &qtdecl_QMediaDevices (); }

class QMediaFormat;

namespace gsi { GSI_QTMULTIMEDIA_PUBLIC gsi::Class<QMediaFormat> &qtdecl_QMediaFormat (); }

class QMediaMetaData;

namespace gsi { GSI_QTMULTIMEDIA_PUBLIC gsi::Class<QMediaMetaData> &qtdecl_QMediaMetaData (); }

class QMediaPlayer;

namespace gsi { GSI_QTMULTIMEDIA_PUBLIC gsi::Class<QMediaPlayer> &qtdecl_QMediaPlayer (); }

class QMediaRecorder;

namespace gsi { GSI_QTMULTIMEDIA_PUBLIC gsi::Class<QMediaRecorder> &qtdecl_QMediaRecorder (); }

class QMediaTimeRange;

namespace gsi { GSI_QTMULTIMEDIA_PUBLIC gsi::Class<QMediaTimeRange> &qtdecl_QMediaTimeRange (); }

class QSoundEffect;

namespace gsi { GSI_QTMULTIMEDIA_PUBLIC gsi::Class<QSoundEffect> &qtdecl_QSoundEffect (); }

class QVideoFrame;

namespace gsi { GSI_QTMULTIMEDIA_PUBLIC gsi::Class<QVideoFrame> &qtdecl_QVideoFrame (); }

class QVideoFrameFormat;

namespace gsi { GSI_QTMULTIMEDIA_PUBLIC gsi::Class<QVideoFrameFormat> &qtdecl_QVideoFrameFormat (); }

class QVideoSink;

namespace gsi { GSI_QTMULTIMEDIA_PUBLIC gsi::Class<QVideoSink> &qtdecl_QVideoSink (); }


#define QT_EXTERNAL_BASE(X) gsi::qtdecl_##X(),

#endif

