
/*

  KLayout Layout Viewer
  Copyright (C) 2006-2020 Matthias Koefferlein

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software
  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

*/

/**
*  @file generated/gsiDeclQtCoreTypeTraits.h
*  @brief Type traits for the Qt binding classes
*
*  DO NOT EDIT THIS FILE. 
*  This file has been created automatically
*/

#ifndef _HDR_gsiDeclQtCoreTypeTraits
#define _HDR_gsiDeclQtCoreTypeTraits

#include "gsiTypes.h"


class QAbstractItemModel;
namespace tl {
template <> struct type_traits<QAbstractItemModel> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
  typedef tl::false_tag has_default_constructor;
};
}

class QAbstractItemModel_Adaptor;
namespace tl {
template <> struct type_traits<QAbstractItemModel_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QAbstractListModel;
namespace tl {
template <> struct type_traits<QAbstractListModel> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
  typedef tl::false_tag has_default_constructor;
};
}

class QAbstractListModel_Adaptor;
namespace tl {
template <> struct type_traits<QAbstractListModel_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QAbstractTableModel;
namespace tl {
template <> struct type_traits<QAbstractTableModel> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
  typedef tl::false_tag has_default_constructor;
};
}

class QAbstractTableModel_Adaptor;
namespace tl {
template <> struct type_traits<QAbstractTableModel_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QBasicTimer;
namespace tl {
template <> struct type_traits<QBasicTimer> : public type_traits<void> {
};
}

class QBuffer;
namespace tl {
template <> struct type_traits<QBuffer> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QByteArrayMatcher;
namespace tl {
template <> struct type_traits<QByteArrayMatcher> : public type_traits<void> {
};
}

class QChildEvent;
namespace tl {
template <> struct type_traits<QChildEvent> : public type_traits<void> {
  typedef tl::false_tag has_default_constructor;
};
}

class QChildEvent_Adaptor;
namespace tl {
template <> struct type_traits<QChildEvent_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_default_constructor;
};
}

class QCoreApplication;
namespace tl {
template <> struct type_traits<QCoreApplication> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
  typedef tl::false_tag has_default_constructor;
};
}

class QCoreApplication_Adaptor;
namespace tl {
template <> struct type_traits<QCoreApplication_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
  typedef tl::false_tag has_default_constructor;
};
}

class QCryptographicHash;
namespace tl {
template <> struct type_traits<QCryptographicHash> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
  typedef tl::false_tag has_default_constructor;
};
}

class QDataStream;
namespace tl {
template <> struct type_traits<QDataStream> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QDataStream_Adaptor;
namespace tl {
template <> struct type_traits<QDataStream_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QDate;
namespace tl {
template <> struct type_traits<QDate> : public type_traits<void> {
};
}

class QDateTime;
namespace tl {
template <> struct type_traits<QDateTime> : public type_traits<void> {
};
}

class QDir;
namespace tl {
template <> struct type_traits<QDir> : public type_traits<void> {
};
}

class QDynamicPropertyChangeEvent;
namespace tl {
template <> struct type_traits<QDynamicPropertyChangeEvent> : public type_traits<void> {
  typedef tl::false_tag has_default_constructor;
};
}

class QDynamicPropertyChangeEvent_Adaptor;
namespace tl {
template <> struct type_traits<QDynamicPropertyChangeEvent_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_default_constructor;
};
}

class QEasingCurve;
namespace tl {
template <> struct type_traits<QEasingCurve> : public type_traits<void> {
};
}

class QEvent;
namespace tl {
template <> struct type_traits<QEvent> : public type_traits<void> {
  typedef tl::false_tag has_default_constructor;
};
}

class QEvent_Adaptor;
namespace tl {
template <> struct type_traits<QEvent_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_default_constructor;
};
}

class QEventLoop;
namespace tl {
template <> struct type_traits<QEventLoop> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QEventLoop_Adaptor;
namespace tl {
template <> struct type_traits<QEventLoop_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

struct QFactoryInterface;
namespace tl {
template <> struct type_traits<QFactoryInterface> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
  typedef tl::false_tag has_default_constructor;
};
}

class QFactoryInterface_Adaptor;
namespace tl {
template <> struct type_traits<QFactoryInterface_Adaptor> : public type_traits<void> {
};
}

class QFile;
namespace tl {
template <> struct type_traits<QFile> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QFileInfo;
namespace tl {
template <> struct type_traits<QFileInfo> : public type_traits<void> {
};
}

class QFileSystemWatcher;
namespace tl {
template <> struct type_traits<QFileSystemWatcher> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QFileSystemWatcher_Adaptor;
namespace tl {
template <> struct type_traits<QFileSystemWatcher_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QIODevice;
namespace tl {
template <> struct type_traits<QIODevice> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
  typedef tl::false_tag has_default_constructor;
};
}

class QLibrary;
namespace tl {
template <> struct type_traits<QLibrary> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QLibrary_Adaptor;
namespace tl {
template <> struct type_traits<QLibrary_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QLibraryInfo;
namespace tl {
template <> struct type_traits<QLibraryInfo> : public type_traits<void> {
  typedef tl::false_tag has_default_constructor;
};
}

class QLine;
namespace tl {
template <> struct type_traits<QLine> : public type_traits<void> {
};
}

class QLineF;
namespace tl {
template <> struct type_traits<QLineF> : public type_traits<void> {
};
}

class QLocale;
namespace tl {
template <> struct type_traits<QLocale> : public type_traits<void> {
};
}

class QMargins;
namespace tl {
template <> struct type_traits<QMargins> : public type_traits<void> {
};
}

class QMetaClassInfo;
namespace tl {
template <> struct type_traits<QMetaClassInfo> : public type_traits<void> {
};
}

class QMetaEnum;
namespace tl {
template <> struct type_traits<QMetaEnum> : public type_traits<void> {
};
}

class QMetaMethod;
namespace tl {
template <> struct type_traits<QMetaMethod> : public type_traits<void> {
};
}

struct QMetaObject;
namespace tl {
template <> struct type_traits<QMetaObject> : public type_traits<void> {
};
}

class QMetaProperty;
namespace tl {
template <> struct type_traits<QMetaProperty> : public type_traits<void> {
};
}

class QMetaType;
namespace tl {
template <> struct type_traits<QMetaType> : public type_traits<void> {
};
}

class QMimeData;
namespace tl {
template <> struct type_traits<QMimeData> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QMimeData_Adaptor;
namespace tl {
template <> struct type_traits<QMimeData_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QModelIndex;
namespace tl {
template <> struct type_traits<QModelIndex> : public type_traits<void> {
};
}

class QMutex;
namespace tl {
template <> struct type_traits<QMutex> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QObject;
namespace tl {
template <> struct type_traits<QObject> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QObject_Adaptor;
namespace tl {
template <> struct type_traits<QObject_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QPersistentModelIndex;
namespace tl {
template <> struct type_traits<QPersistentModelIndex> : public type_traits<void> {
};
}

class QPluginLoader;
namespace tl {
template <> struct type_traits<QPluginLoader> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QPluginLoader_Adaptor;
namespace tl {
template <> struct type_traits<QPluginLoader_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QPoint;
namespace tl {
template <> struct type_traits<QPoint> : public type_traits<void> {
};
}

class QPointF;
namespace tl {
template <> struct type_traits<QPointF> : public type_traits<void> {
};
}

class QProcess;
namespace tl {
template <> struct type_traits<QProcess> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QProcessEnvironment;
namespace tl {
template <> struct type_traits<QProcessEnvironment> : public type_traits<void> {
};
}

class QReadLocker;
namespace tl {
template <> struct type_traits<QReadLocker> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
  typedef tl::false_tag has_default_constructor;
};
}

class QReadWriteLock;
namespace tl {
template <> struct type_traits<QReadWriteLock> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QRect;
namespace tl {
template <> struct type_traits<QRect> : public type_traits<void> {
};
}

class QRectF;
namespace tl {
template <> struct type_traits<QRectF> : public type_traits<void> {
};
}

class QRegExp;
namespace tl {
template <> struct type_traits<QRegExp> : public type_traits<void> {
};
}

class QResource;
namespace tl {
template <> struct type_traits<QResource> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QSemaphore;
namespace tl {
template <> struct type_traits<QSemaphore> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QSettings;
namespace tl {
template <> struct type_traits<QSettings> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QSettings_Adaptor;
namespace tl {
template <> struct type_traits<QSettings_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QSignalMapper;
namespace tl {
template <> struct type_traits<QSignalMapper> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QSignalMapper_Adaptor;
namespace tl {
template <> struct type_traits<QSignalMapper_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QSize;
namespace tl {
template <> struct type_traits<QSize> : public type_traits<void> {
};
}

class QSizeF;
namespace tl {
template <> struct type_traits<QSizeF> : public type_traits<void> {
};
}

class QSocketNotifier;
namespace tl {
template <> struct type_traits<QSocketNotifier> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
  typedef tl::false_tag has_default_constructor;
};
}

class QSocketNotifier_Adaptor;
namespace tl {
template <> struct type_traits<QSocketNotifier_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
  typedef tl::false_tag has_default_constructor;
};
}

class QStringMatcher;
namespace tl {
template <> struct type_traits<QStringMatcher> : public type_traits<void> {
};
}

class QSysInfo;
namespace tl {
template <> struct type_traits<QSysInfo> : public type_traits<void> {
};
}

class QSystemLocale;
namespace tl {
template <> struct type_traits<QSystemLocale> : public type_traits<void> {
};
}

class QSystemLocale_Adaptor;
namespace tl {
template <> struct type_traits<QSystemLocale_Adaptor> : public type_traits<void> {
};
}

class QTemporaryFile;
namespace tl {
template <> struct type_traits<QTemporaryFile> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QTextCodec;
namespace tl {
template <> struct type_traits<QTextCodec> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
  typedef tl::false_tag has_default_constructor;
  typedef tl::false_tag has_public_destructor;
};
}

class QTextCodec_Adaptor;
namespace tl {
template <> struct type_traits<QTextCodec_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

#include <QTextCodec>
namespace tl {
template <> struct type_traits<QTextCodec::ConverterState> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QTextDecoder;
namespace tl {
template <> struct type_traits<QTextDecoder> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
  typedef tl::false_tag has_default_constructor;
};
}

class QTextEncoder;
namespace tl {
template <> struct type_traits<QTextEncoder> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
  typedef tl::false_tag has_default_constructor;
};
}

class QTextStream;
namespace tl {
template <> struct type_traits<QTextStream> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QTextStream_Adaptor;
namespace tl {
template <> struct type_traits<QTextStream_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QThread;
namespace tl {
template <> struct type_traits<QThread> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QThread_Adaptor;
namespace tl {
template <> struct type_traits<QThread_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QTime;
namespace tl {
template <> struct type_traits<QTime> : public type_traits<void> {
};
}

class QTimeLine;
namespace tl {
template <> struct type_traits<QTimeLine> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QTimeLine_Adaptor;
namespace tl {
template <> struct type_traits<QTimeLine_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QTimer;
namespace tl {
template <> struct type_traits<QTimer> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QTimer_Adaptor;
namespace tl {
template <> struct type_traits<QTimer_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QTimerEvent;
namespace tl {
template <> struct type_traits<QTimerEvent> : public type_traits<void> {
  typedef tl::false_tag has_default_constructor;
};
}

class QTimerEvent_Adaptor;
namespace tl {
template <> struct type_traits<QTimerEvent_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_default_constructor;
};
}

class QTranslator;
namespace tl {
template <> struct type_traits<QTranslator> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QTranslator_Adaptor;
namespace tl {
template <> struct type_traits<QTranslator_Adaptor> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QUrl;
namespace tl {
template <> struct type_traits<QUrl> : public type_traits<void> {
};
}

class QWaitCondition;
namespace tl {
template <> struct type_traits<QWaitCondition> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
};
}

class QWriteLocker;
namespace tl {
template <> struct type_traits<QWriteLocker> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
  typedef tl::false_tag has_default_constructor;
};
}

class Qt_Namespace;
namespace tl {
template <> struct type_traits<Qt_Namespace> : public type_traits<void> {
  typedef tl::false_tag has_copy_constructor;
  typedef tl::false_tag has_default_constructor;
};
}


#endif
