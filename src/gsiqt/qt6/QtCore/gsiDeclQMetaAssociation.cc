
/*

  KLayout Layout Viewer
  Copyright (C) 2006-2023 Matthias Koefferlein

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software
  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

*/

/**
*  @file gsiDeclQMetaAssociation.cc 
*
*  DO NOT EDIT THIS FILE. 
*  This file has been created automatically
*/

#include <QMetaAssociation>
#include <QMetaType>
#include "gsiQt.h"
#include "gsiQtCoreCommon.h"
#include <memory>

// -----------------------------------------------------------------------
// class QMetaAssociation

//  Constructor QMetaAssociation::QMetaAssociation()


static void _init_ctor_QMetaAssociation_0 (qt_gsi::GenericStaticMethod *decl)
{
  decl->set_return_new<QMetaAssociation> ();
}

static void _call_ctor_QMetaAssociation_0 (const qt_gsi::GenericStaticMethod * /*decl*/, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<QMetaAssociation *> (new QMetaAssociation ());
}


// bool QMetaAssociation::canContainsKey()


static void _init_f_canContainsKey_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<bool > ();
}

static void _call_f_canContainsKey_c0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<bool > ((bool)((QMetaAssociation *)cls)->canContainsKey ());
}


// bool QMetaAssociation::canCreateConstIteratorAtKey()


static void _init_f_canCreateConstIteratorAtKey_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<bool > ();
}

static void _call_f_canCreateConstIteratorAtKey_c0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<bool > ((bool)((QMetaAssociation *)cls)->canCreateConstIteratorAtKey ());
}


// bool QMetaAssociation::canCreateIteratorAtKey()


static void _init_f_canCreateIteratorAtKey_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<bool > ();
}

static void _call_f_canCreateIteratorAtKey_c0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<bool > ((bool)((QMetaAssociation *)cls)->canCreateIteratorAtKey ());
}


// bool QMetaAssociation::canGetKeyAtConstIterator()


static void _init_f_canGetKeyAtConstIterator_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<bool > ();
}

static void _call_f_canGetKeyAtConstIterator_c0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<bool > ((bool)((QMetaAssociation *)cls)->canGetKeyAtConstIterator ());
}


// bool QMetaAssociation::canGetKeyAtIterator()


static void _init_f_canGetKeyAtIterator_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<bool > ();
}

static void _call_f_canGetKeyAtIterator_c0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<bool > ((bool)((QMetaAssociation *)cls)->canGetKeyAtIterator ());
}


// bool QMetaAssociation::canGetMappedAtConstIterator()


static void _init_f_canGetMappedAtConstIterator_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<bool > ();
}

static void _call_f_canGetMappedAtConstIterator_c0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<bool > ((bool)((QMetaAssociation *)cls)->canGetMappedAtConstIterator ());
}


// bool QMetaAssociation::canGetMappedAtIterator()


static void _init_f_canGetMappedAtIterator_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<bool > ();
}

static void _call_f_canGetMappedAtIterator_c0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<bool > ((bool)((QMetaAssociation *)cls)->canGetMappedAtIterator ());
}


// bool QMetaAssociation::canGetMappedAtKey()


static void _init_f_canGetMappedAtKey_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<bool > ();
}

static void _call_f_canGetMappedAtKey_c0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<bool > ((bool)((QMetaAssociation *)cls)->canGetMappedAtKey ());
}


// bool QMetaAssociation::canInsertKey()


static void _init_f_canInsertKey_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<bool > ();
}

static void _call_f_canInsertKey_c0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<bool > ((bool)((QMetaAssociation *)cls)->canInsertKey ());
}


// bool QMetaAssociation::canRemoveKey()


static void _init_f_canRemoveKey_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<bool > ();
}

static void _call_f_canRemoveKey_c0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<bool > ((bool)((QMetaAssociation *)cls)->canRemoveKey ());
}


// bool QMetaAssociation::canSetMappedAtIterator()


static void _init_f_canSetMappedAtIterator_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<bool > ();
}

static void _call_f_canSetMappedAtIterator_c0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<bool > ((bool)((QMetaAssociation *)cls)->canSetMappedAtIterator ());
}


// bool QMetaAssociation::canSetMappedAtKey()


static void _init_f_canSetMappedAtKey_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<bool > ();
}

static void _call_f_canSetMappedAtKey_c0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<bool > ((bool)((QMetaAssociation *)cls)->canSetMappedAtKey ());
}


// bool QMetaAssociation::containsKey(const void *container, const void *key)


static void _init_f_containsKey_c3394 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("container");
  decl->add_arg<const void * > (argspec_0);
  static gsi::ArgSpecBase argspec_1 ("key");
  decl->add_arg<const void * > (argspec_1);
  decl->set_return<bool > ();
}

static void _call_f_containsKey_c3394 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  const void *arg1 = gsi::arg_reader<const void * >() (args, heap);
  const void *arg2 = gsi::arg_reader<const void * >() (args, heap);
  ret.write<bool > ((bool)((QMetaAssociation *)cls)->containsKey (arg1, arg2));
}


// void *QMetaAssociation::createConstIteratorAtKey(const void *container, const void *key)


static void _init_f_createConstIteratorAtKey_c3394 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("container");
  decl->add_arg<const void * > (argspec_0);
  static gsi::ArgSpecBase argspec_1 ("key");
  decl->add_arg<const void * > (argspec_1);
  decl->set_return<void * > ();
}

static void _call_f_createConstIteratorAtKey_c3394 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  const void *arg1 = gsi::arg_reader<const void * >() (args, heap);
  const void *arg2 = gsi::arg_reader<const void * >() (args, heap);
  ret.write<void * > ((void *)((QMetaAssociation *)cls)->createConstIteratorAtKey (arg1, arg2));
}


// void *QMetaAssociation::createIteratorAtKey(void *container, const void *key)


static void _init_f_createIteratorAtKey_c2699 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("container");
  decl->add_arg<void * > (argspec_0);
  static gsi::ArgSpecBase argspec_1 ("key");
  decl->add_arg<const void * > (argspec_1);
  decl->set_return<void * > ();
}

static void _call_f_createIteratorAtKey_c2699 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  void *arg1 = gsi::arg_reader<void * >() (args, heap);
  const void *arg2 = gsi::arg_reader<const void * >() (args, heap);
  ret.write<void * > ((void *)((QMetaAssociation *)cls)->createIteratorAtKey (arg1, arg2));
}


// void QMetaAssociation::insertKey(void *container, const void *key)


static void _init_f_insertKey_c2699 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("container");
  decl->add_arg<void * > (argspec_0);
  static gsi::ArgSpecBase argspec_1 ("key");
  decl->add_arg<const void * > (argspec_1);
  decl->set_return<void > ();
}

static void _call_f_insertKey_c2699 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  void *arg1 = gsi::arg_reader<void * >() (args, heap);
  const void *arg2 = gsi::arg_reader<const void * >() (args, heap);
  __SUPPRESS_UNUSED_WARNING(ret);
  ((QMetaAssociation *)cls)->insertKey (arg1, arg2);
}


// void QMetaAssociation::keyAtConstIterator(const void *iterator, void *key)


static void _init_f_keyAtConstIterator_c2699 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("iterator");
  decl->add_arg<const void * > (argspec_0);
  static gsi::ArgSpecBase argspec_1 ("key");
  decl->add_arg<void * > (argspec_1);
  decl->set_return<void > ();
}

static void _call_f_keyAtConstIterator_c2699 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  const void *arg1 = gsi::arg_reader<const void * >() (args, heap);
  void *arg2 = gsi::arg_reader<void * >() (args, heap);
  __SUPPRESS_UNUSED_WARNING(ret);
  ((QMetaAssociation *)cls)->keyAtConstIterator (arg1, arg2);
}


// void QMetaAssociation::keyAtIterator(const void *iterator, void *key)


static void _init_f_keyAtIterator_c2699 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("iterator");
  decl->add_arg<const void * > (argspec_0);
  static gsi::ArgSpecBase argspec_1 ("key");
  decl->add_arg<void * > (argspec_1);
  decl->set_return<void > ();
}

static void _call_f_keyAtIterator_c2699 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  const void *arg1 = gsi::arg_reader<const void * >() (args, heap);
  void *arg2 = gsi::arg_reader<void * >() (args, heap);
  __SUPPRESS_UNUSED_WARNING(ret);
  ((QMetaAssociation *)cls)->keyAtIterator (arg1, arg2);
}


// QMetaType QMetaAssociation::keyMetaType()


static void _init_f_keyMetaType_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<QMetaType > ();
}

static void _call_f_keyMetaType_c0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<QMetaType > ((QMetaType)((QMetaAssociation *)cls)->keyMetaType ());
}


// void QMetaAssociation::mappedAtConstIterator(const void *iterator, void *mapped)


static void _init_f_mappedAtConstIterator_c2699 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("iterator");
  decl->add_arg<const void * > (argspec_0);
  static gsi::ArgSpecBase argspec_1 ("mapped");
  decl->add_arg<void * > (argspec_1);
  decl->set_return<void > ();
}

static void _call_f_mappedAtConstIterator_c2699 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  const void *arg1 = gsi::arg_reader<const void * >() (args, heap);
  void *arg2 = gsi::arg_reader<void * >() (args, heap);
  __SUPPRESS_UNUSED_WARNING(ret);
  ((QMetaAssociation *)cls)->mappedAtConstIterator (arg1, arg2);
}


// void QMetaAssociation::mappedAtIterator(const void *iterator, void *mapped)


static void _init_f_mappedAtIterator_c2699 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("iterator");
  decl->add_arg<const void * > (argspec_0);
  static gsi::ArgSpecBase argspec_1 ("mapped");
  decl->add_arg<void * > (argspec_1);
  decl->set_return<void > ();
}

static void _call_f_mappedAtIterator_c2699 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  const void *arg1 = gsi::arg_reader<const void * >() (args, heap);
  void *arg2 = gsi::arg_reader<void * >() (args, heap);
  __SUPPRESS_UNUSED_WARNING(ret);
  ((QMetaAssociation *)cls)->mappedAtIterator (arg1, arg2);
}


// void QMetaAssociation::mappedAtKey(const void *container, const void *key, void *mapped)


static void _init_f_mappedAtKey_c4342 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("container");
  decl->add_arg<const void * > (argspec_0);
  static gsi::ArgSpecBase argspec_1 ("key");
  decl->add_arg<const void * > (argspec_1);
  static gsi::ArgSpecBase argspec_2 ("mapped");
  decl->add_arg<void * > (argspec_2);
  decl->set_return<void > ();
}

static void _call_f_mappedAtKey_c4342 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  const void *arg1 = gsi::arg_reader<const void * >() (args, heap);
  const void *arg2 = gsi::arg_reader<const void * >() (args, heap);
  void *arg3 = gsi::arg_reader<void * >() (args, heap);
  __SUPPRESS_UNUSED_WARNING(ret);
  ((QMetaAssociation *)cls)->mappedAtKey (arg1, arg2, arg3);
}


// QMetaType QMetaAssociation::mappedMetaType()


static void _init_f_mappedMetaType_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<QMetaType > ();
}

static void _call_f_mappedMetaType_c0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<QMetaType > ((QMetaType)((QMetaAssociation *)cls)->mappedMetaType ());
}


// void QMetaAssociation::removeKey(void *container, const void *key)


static void _init_f_removeKey_c2699 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("container");
  decl->add_arg<void * > (argspec_0);
  static gsi::ArgSpecBase argspec_1 ("key");
  decl->add_arg<const void * > (argspec_1);
  decl->set_return<void > ();
}

static void _call_f_removeKey_c2699 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  void *arg1 = gsi::arg_reader<void * >() (args, heap);
  const void *arg2 = gsi::arg_reader<const void * >() (args, heap);
  __SUPPRESS_UNUSED_WARNING(ret);
  ((QMetaAssociation *)cls)->removeKey (arg1, arg2);
}


// void QMetaAssociation::setMappedAtIterator(const void *iterator, const void *mapped)


static void _init_f_setMappedAtIterator_c3394 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("iterator");
  decl->add_arg<const void * > (argspec_0);
  static gsi::ArgSpecBase argspec_1 ("mapped");
  decl->add_arg<const void * > (argspec_1);
  decl->set_return<void > ();
}

static void _call_f_setMappedAtIterator_c3394 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  const void *arg1 = gsi::arg_reader<const void * >() (args, heap);
  const void *arg2 = gsi::arg_reader<const void * >() (args, heap);
  __SUPPRESS_UNUSED_WARNING(ret);
  ((QMetaAssociation *)cls)->setMappedAtIterator (arg1, arg2);
}


// void QMetaAssociation::setMappedAtKey(void *container, const void *key, const void *mapped)


static void _init_f_setMappedAtKey_c4342 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("container");
  decl->add_arg<void * > (argspec_0);
  static gsi::ArgSpecBase argspec_1 ("key");
  decl->add_arg<const void * > (argspec_1);
  static gsi::ArgSpecBase argspec_2 ("mapped");
  decl->add_arg<const void * > (argspec_2);
  decl->set_return<void > ();
}

static void _call_f_setMappedAtKey_c4342 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  void *arg1 = gsi::arg_reader<void * >() (args, heap);
  const void *arg2 = gsi::arg_reader<const void * >() (args, heap);
  const void *arg3 = gsi::arg_reader<const void * >() (args, heap);
  __SUPPRESS_UNUSED_WARNING(ret);
  ((QMetaAssociation *)cls)->setMappedAtKey (arg1, arg2, arg3);
}



namespace gsi
{

static gsi::Methods methods_QMetaAssociation () {
  gsi::Methods methods;
  methods += new qt_gsi::GenericStaticMethod ("new", "@brief Constructor QMetaAssociation::QMetaAssociation()\nThis method creates an object of class QMetaAssociation.", &_init_ctor_QMetaAssociation_0, &_call_ctor_QMetaAssociation_0);
  methods += new qt_gsi::GenericMethod ("canContainsKey", "@brief Method bool QMetaAssociation::canContainsKey()\n", true, &_init_f_canContainsKey_c0, &_call_f_canContainsKey_c0);
  methods += new qt_gsi::GenericMethod ("canCreateConstIteratorAtKey", "@brief Method bool QMetaAssociation::canCreateConstIteratorAtKey()\n", true, &_init_f_canCreateConstIteratorAtKey_c0, &_call_f_canCreateConstIteratorAtKey_c0);
  methods += new qt_gsi::GenericMethod ("canCreateIteratorAtKey", "@brief Method bool QMetaAssociation::canCreateIteratorAtKey()\n", true, &_init_f_canCreateIteratorAtKey_c0, &_call_f_canCreateIteratorAtKey_c0);
  methods += new qt_gsi::GenericMethod ("canGetKeyAtConstIterator", "@brief Method bool QMetaAssociation::canGetKeyAtConstIterator()\n", true, &_init_f_canGetKeyAtConstIterator_c0, &_call_f_canGetKeyAtConstIterator_c0);
  methods += new qt_gsi::GenericMethod ("canGetKeyAtIterator", "@brief Method bool QMetaAssociation::canGetKeyAtIterator()\n", true, &_init_f_canGetKeyAtIterator_c0, &_call_f_canGetKeyAtIterator_c0);
  methods += new qt_gsi::GenericMethod ("canGetMappedAtConstIterator", "@brief Method bool QMetaAssociation::canGetMappedAtConstIterator()\n", true, &_init_f_canGetMappedAtConstIterator_c0, &_call_f_canGetMappedAtConstIterator_c0);
  methods += new qt_gsi::GenericMethod ("canGetMappedAtIterator", "@brief Method bool QMetaAssociation::canGetMappedAtIterator()\n", true, &_init_f_canGetMappedAtIterator_c0, &_call_f_canGetMappedAtIterator_c0);
  methods += new qt_gsi::GenericMethod ("canGetMappedAtKey", "@brief Method bool QMetaAssociation::canGetMappedAtKey()\n", true, &_init_f_canGetMappedAtKey_c0, &_call_f_canGetMappedAtKey_c0);
  methods += new qt_gsi::GenericMethod ("canInsertKey", "@brief Method bool QMetaAssociation::canInsertKey()\n", true, &_init_f_canInsertKey_c0, &_call_f_canInsertKey_c0);
  methods += new qt_gsi::GenericMethod ("canRemoveKey", "@brief Method bool QMetaAssociation::canRemoveKey()\n", true, &_init_f_canRemoveKey_c0, &_call_f_canRemoveKey_c0);
  methods += new qt_gsi::GenericMethod ("canSetMappedAtIterator", "@brief Method bool QMetaAssociation::canSetMappedAtIterator()\n", true, &_init_f_canSetMappedAtIterator_c0, &_call_f_canSetMappedAtIterator_c0);
  methods += new qt_gsi::GenericMethod ("canSetMappedAtKey", "@brief Method bool QMetaAssociation::canSetMappedAtKey()\n", true, &_init_f_canSetMappedAtKey_c0, &_call_f_canSetMappedAtKey_c0);
  methods += new qt_gsi::GenericMethod ("containsKey", "@brief Method bool QMetaAssociation::containsKey(const void *container, const void *key)\n", true, &_init_f_containsKey_c3394, &_call_f_containsKey_c3394);
  methods += new qt_gsi::GenericMethod ("createConstIteratorAtKey", "@brief Method void *QMetaAssociation::createConstIteratorAtKey(const void *container, const void *key)\n", true, &_init_f_createConstIteratorAtKey_c3394, &_call_f_createConstIteratorAtKey_c3394);
  methods += new qt_gsi::GenericMethod ("createIteratorAtKey", "@brief Method void *QMetaAssociation::createIteratorAtKey(void *container, const void *key)\n", true, &_init_f_createIteratorAtKey_c2699, &_call_f_createIteratorAtKey_c2699);
  methods += new qt_gsi::GenericMethod ("insertKey", "@brief Method void QMetaAssociation::insertKey(void *container, const void *key)\n", true, &_init_f_insertKey_c2699, &_call_f_insertKey_c2699);
  methods += new qt_gsi::GenericMethod ("keyAtConstIterator", "@brief Method void QMetaAssociation::keyAtConstIterator(const void *iterator, void *key)\n", true, &_init_f_keyAtConstIterator_c2699, &_call_f_keyAtConstIterator_c2699);
  methods += new qt_gsi::GenericMethod ("keyAtIterator", "@brief Method void QMetaAssociation::keyAtIterator(const void *iterator, void *key)\n", true, &_init_f_keyAtIterator_c2699, &_call_f_keyAtIterator_c2699);
  methods += new qt_gsi::GenericMethod ("keyMetaType", "@brief Method QMetaType QMetaAssociation::keyMetaType()\n", true, &_init_f_keyMetaType_c0, &_call_f_keyMetaType_c0);
  methods += new qt_gsi::GenericMethod ("mappedAtConstIterator", "@brief Method void QMetaAssociation::mappedAtConstIterator(const void *iterator, void *mapped)\n", true, &_init_f_mappedAtConstIterator_c2699, &_call_f_mappedAtConstIterator_c2699);
  methods += new qt_gsi::GenericMethod ("mappedAtIterator", "@brief Method void QMetaAssociation::mappedAtIterator(const void *iterator, void *mapped)\n", true, &_init_f_mappedAtIterator_c2699, &_call_f_mappedAtIterator_c2699);
  methods += new qt_gsi::GenericMethod ("mappedAtKey", "@brief Method void QMetaAssociation::mappedAtKey(const void *container, const void *key, void *mapped)\n", true, &_init_f_mappedAtKey_c4342, &_call_f_mappedAtKey_c4342);
  methods += new qt_gsi::GenericMethod ("mappedMetaType", "@brief Method QMetaType QMetaAssociation::mappedMetaType()\n", true, &_init_f_mappedMetaType_c0, &_call_f_mappedMetaType_c0);
  methods += new qt_gsi::GenericMethod ("removeKey", "@brief Method void QMetaAssociation::removeKey(void *container, const void *key)\n", true, &_init_f_removeKey_c2699, &_call_f_removeKey_c2699);
  methods += new qt_gsi::GenericMethod ("setMappedAtIterator", "@brief Method void QMetaAssociation::setMappedAtIterator(const void *iterator, const void *mapped)\n", true, &_init_f_setMappedAtIterator_c3394, &_call_f_setMappedAtIterator_c3394);
  methods += new qt_gsi::GenericMethod ("setMappedAtKey", "@brief Method void QMetaAssociation::setMappedAtKey(void *container, const void *key, const void *mapped)\n", true, &_init_f_setMappedAtKey_c4342, &_call_f_setMappedAtKey_c4342);
  return methods;
}

gsi::Class<QMetaContainer> &qtdecl_QMetaContainer ();

gsi::Class<QMetaAssociation> decl_QMetaAssociation (qtdecl_QMetaContainer (), "QtCore", "QMetaAssociation",
  methods_QMetaAssociation (),
  "@qt\n@brief Binding of QMetaAssociation");


GSI_QTCORE_PUBLIC gsi::Class<QMetaAssociation> &qtdecl_QMetaAssociation () { return decl_QMetaAssociation; }

}

